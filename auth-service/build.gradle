buildscript {
  ext {
    springBootVersion = '2.1.4.RELEASE'
    thinPlugin = 'org.springframework.boot.experimental:spring-boot-thin-gradle-plugin'
    thinVersion = '1.0.11.RELEASE'
  }
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    classpath("${thinPlugin}:${thinVersion}")
  }
}

plugins {
  id "nebula.ospackage" version "3.2.0"
  
}

apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot.experimental.thin-launcher'
apply plugin: 'jacoco'




group = 'com.revx.auth'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
  mavenCentral()
}

configurations {
  // all*.exclude group: 'net.minidev', module: 'json-smart', version: '1.3.1'
  compile.exclude module: 'spring-boot-starter-logging'
}
dependencies {
  compile project(':api-common')
  compile 'org.springframework.boot:spring-boot-starter-data-jpa'
  compile 'org.springframework.boot:spring-boot-starter-web'
  compile 'org.springframework.boot:spring-boot-starter-security'
  compile 'org.springframework.boot:spring-boot-starter-log4j2'
  compile 'org.springframework.boot:spring-boot-starter-cache'
  compile 'org.springframework.boot:spring-boot-starter-actuator'
  compile 'io.jsonwebtoken:jjwt:0.9.0'
  compile( 'org.springframework.security:spring-security-config')
  compile( 'org.springframework.security:spring-security-ldap')
  compile (group: 'com.microsoft.azure', name: 'adal4j', version: '1.6.0') {
    exclude group: 'net.minidev', module: 'json-smart'
  }
  compile (group: 'com.nimbusds', name: 'oauth2-oidc-sdk', version: '5.24.1') {
    exclude group: 'net.minidev', module: 'json-smart'
  }
  compile group: 'org.json', name: 'json', version: '20190722'
  compile 'mysql:mysql-connector-java'
  compile("org.springframework:spring-tx")
  compile("com.unboundid:unboundid-ldapsdk")
  compile("com.github.ulisesbocchio:jasypt-spring-boot:2.1.0")
  compile group: 'de.ruedigermoeller', name: 'fst', version: '2.57'
  testCompile "org.springframework.boot:spring-boot-starter-test"
  testCompile "org.springframework.security:spring-security-test"
}

ospackage {
  packageName = 'auth-service'
  version = '1.0.0'
  release = new Date().format('yyyyMMdd_HH_mm_ss')
  arch = NOARCH
  os = LINUX

  preInstall file("scripts/rpm/preInstall.sh")
  postInstall file("scripts/rpm/postInstall.sh")
  preUninstall file("scripts/rpm/preUninstall.sh")
  postUninstall file("scripts/rpm/postUninstall.sh")

  ext.rpmpath = '/atom/auth-service/releases/' + version
  into ext.rpmpath
  user "atomex"
  permissionGroup "atomex"
  from(jar.outputs.files) {
    into 'lib'
  }

  from(project.configurations.runtime) {
    into 'lib'
  }

  from(project.libsDir) {
    into 'lib'
  }

  from('scripts/') {
    into 'bin'
  }

  from(project.sourceSets.main.resources) {
    directive = 1
    into 'conf'
    exclude '*.jpg'
  }
}

buildRpm {
  addParentDirs = false
  user "atomex"
  permissionGroup "atomex"
  dependsOn tasks['thinJar']
  // Creates an empty log
  directory("/atom/auth-service/logs")
}

jacoco {
  toolVersion = "0.8.4" //jacoco version
  reportsDir = file("$buildDir/reports/jacoco") //default directory where jacoco generates test reports
}
//if you want to use custom report then uncomment below task //use command "gradle build jacocoTestReport" to generate reports using below task
jacocoTestReport {
  reports {
    xml.enabled true
    csv.enabled false
    html.destination "${buildDir}/jacocoHtml"
  }
}
//build success even when test failure occurs
test {
  ignoreFailures = true
}


